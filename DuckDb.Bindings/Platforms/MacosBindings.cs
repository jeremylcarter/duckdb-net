// <auto-generated/>
// ReSharper disable InconsistentNaming
// ReSharper disable SuggestVarOrType_SimpleTypes
// ReSharper disable JoinDeclarationAndInitializer
// ReSharper disable InlineOutVariableDeclaration

using System;
using System.Runtime.InteropServices;

namespace DuckDb.Bindings.Platforms
{
    /// <summary>
    /// MacOS bindings for the native duckdb lib
    /// </summary>
    internal sealed class MacosBindings : NativeBindings
    {
        private const string Dll = "libduckdb.dylib";
        
        public override DuckdbState DuckdbOpen(String athRef, out IntPtr outDatabase)
        {
            IntPtr athRef_;
            DuckdbState __result__;
            athRef_ = Encoder.ManagedStringToNativeUtf8(athRef);
            __result__ = duckdb_open_(athRef_, out outDatabase);
            Marshal.FreeHGlobal(athRef_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_open", CallingConvention = CallingConvention.Cdecl)]
        private static extern DuckdbState duckdb_open_(IntPtr param0, out IntPtr param1);
        
        public override void DuckdbClose(ref IntPtr database)
        {
            duckdb_close_(ref database);
        }

        [DllImport(Dll, EntryPoint = "duckdb_close", CallingConvention = CallingConvention.Cdecl)]
        private static extern void duckdb_close_(ref IntPtr param0);
        
        public override DuckdbState DuckdbConnect(IntPtr database, out IntPtr outConnection)
        {
            DuckdbState __result__;
            __result__ = duckdb_connect_(database, out outConnection);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_connect", CallingConvention = CallingConvention.Cdecl)]
        private static extern DuckdbState duckdb_connect_(IntPtr param0, out IntPtr param1);
        
        public override void DuckdbDisconnect(ref IntPtr connection)
        {
            duckdb_disconnect_(ref connection);
        }

        [DllImport(Dll, EntryPoint = "duckdb_disconnect", CallingConvention = CallingConvention.Cdecl)]
        private static extern void duckdb_disconnect_(ref IntPtr param0);
        
        public override DuckdbState DuckdbQuery(IntPtr connection, String query, out DuckdbResult outResult)
        {
            DuckdbState __result__;
            outResult = new DuckdbResult();
            
            IntPtr query_ = Encoder.ManagedStringToNativeUtf8(query);
            
            DuckdbResult.__Native outResult_;
            __result__ = duckdb_query_(connection, query_, out outResult_);
            outResult.__MarshalFrom(ref outResult_);
            outResult.__MarshalFree(ref outResult_);
            
            Marshal.FreeHGlobal(query_);
            
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_query", CallingConvention = CallingConvention.Cdecl)]
        private static extern DuckdbState duckdb_query_(IntPtr connection, IntPtr query, out DuckdbResult.__Native outResult);
        
        public override unsafe void DuckdbDestroyResult(ref DuckdbResult result)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            result.__MarshalTo(ref result_);
            duckdb_destroy_result_(&result_);
            result.__MarshalFree(ref result_);
        }

        [DllImport(Dll, EntryPoint = "duckdb_destroy_result", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern void duckdb_destroy_result_(void *param0);
        
        public override unsafe String DuckdbColumnName(ref DuckdbResult result, UInt64 col)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            String __result__;
            IntPtr __result__native;
            result.__MarshalTo(ref result_);
            __result__native = duckdb_column_name_(&result_, col);
            __result__ = Encoder.NativeUtf8ToManagedString(__result__native);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_column_name", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern IntPtr duckdb_column_name_(void *param0, UInt64 param1);
        
        public override unsafe Boolean DuckdbValueBoolean(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            Boolean __result__;
            Byte __result__native;
            result.__MarshalTo(ref result_);
            __result__native = duckdb_value_boolean_(&result_, col, row);
            __result__ = __result__native != 0;
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_boolean", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern Byte duckdb_value_boolean_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe Byte DuckdbValueInt8(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            Byte __result__;
            result.__MarshalTo(ref result_);
            __result__ = duckdb_value_int8_(&result_, col, row);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_int8", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern Byte duckdb_value_int8_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe Int16 DuckdbValueInt16(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            Int16 __result__;
            result.__MarshalTo(ref result_);
            __result__ = duckdb_value_int16_(&result_, col, row);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_int16", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern short duckdb_value_int16_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe Int32 DuckdbValueInt32(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            Int32 __result__;
            result.__MarshalTo(ref result_);
            __result__ = duckdb_value_int32_(&result_, col, row);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_int32", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern int duckdb_value_int32_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe Int64 DuckdbValueInt64(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            Int64 __result__;
            result.__MarshalTo(ref result_);
            __result__ = duckdb_value_int64_(&result_, col, row);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_int64", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern long duckdb_value_int64_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe Single DuckdbValueFloat(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            Single __result__;
            result.__MarshalTo(ref result_);
            __result__ = duckdb_value_float_(&result_, col, row);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_float", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern float duckdb_value_float_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe Double DuckdbValueDouble(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            Double __result__;
            result.__MarshalTo(ref result_);
            __result__ = duckdb_value_double_(&result_, col, row);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_double", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern double duckdb_value_double_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe String DuckdbValueVarchar(ref DuckdbResult result, UInt64 col, UInt64 row)
        {
            DuckdbResult.__Native result_ = default (DuckdbResult.__Native);
            String __result__;
            IntPtr __result__native;
            result.__MarshalTo(ref result_);
            __result__native = duckdb_value_varchar_(&result_, col, row);
            __result__ = Encoder.NativeUtf8ToManagedString(__result__native);
            result.__MarshalFree(ref result_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_value_varchar", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern IntPtr duckdb_value_varchar_(void *param0, UInt64 param1, UInt64 param2);
        
        public override unsafe DuckdbState DuckdbPrepare(IntPtr connection, String query, IntPtr outPreparedStatement)
        {
            IntPtr query_;
            DuckdbState __result__;
            query_ = Encoder.ManagedStringToNativeUtf8(query);
            __result__ = duckdb_prepare_((void *)connection, (void *)query_, (void *)outPreparedStatement);
            Marshal.FreeHGlobal(query_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_prepare", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_prepare_(void *param0, void *param1, void *param2);
        
        public override unsafe DuckdbState DuckdbNparams(IntPtr reparedStatementRef, UInt64 nparamsOut)
        {
            DuckdbState __result__;
            __result__ = duckdb_nparams_((void *)reparedStatementRef, &nparamsOut);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_nparams", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_nparams_(void *param0, void *param1);
        
        public override unsafe DuckdbState DuckdbBindBoolean(IntPtr reparedStatementRef, UInt64 paramIdx, Boolean val)
        {
            Byte val_;
            DuckdbState __result__;
            val_ = (Byte)(val ? 1 : 0);
            __result__ = duckdb_bind_boolean_((void *)reparedStatementRef, paramIdx, val_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_boolean", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_boolean_(void *param0, UInt64 param1, Byte param2);
        
        public override unsafe DuckdbState DuckdbBindInt8(IntPtr reparedStatementRef, UInt64 paramIdx, Byte val)
        {
            DuckdbState __result__;
            __result__ = duckdb_bind_int8_((void *)reparedStatementRef, paramIdx, val);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_int8", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_int8_(void *param0, UInt64 param1, Byte param2);
        
        public override unsafe DuckdbState DuckdbBindInt16(IntPtr reparedStatementRef, UInt64 paramIdx, Int16 val)
        {
            DuckdbState __result__;
            __result__ = duckdb_bind_int16_((void *)reparedStatementRef, paramIdx, val);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_int16", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_int16_(void *param0, UInt64 param1, short param2);
        
        public override unsafe DuckdbState DuckdbBindInt32(IntPtr reparedStatementRef, UInt64 paramIdx, Int32 val)
        {
            DuckdbState __result__;
            __result__ = duckdb_bind_int32_((void *)reparedStatementRef, paramIdx, val);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_int32", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_int32_(void *param0, UInt64 param1, int param2);
        
        public override unsafe DuckdbState DuckdbBindInt64(IntPtr reparedStatementRef, UInt64 paramIdx, Int64 val)
        {
            DuckdbState __result__;
            __result__ = duckdb_bind_int64_((void *)reparedStatementRef, paramIdx, val);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_int64", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_int64_(void *param0, UInt64 param1, long param2);
        
        public override unsafe DuckdbState DuckdbBindFloat(IntPtr reparedStatementRef, UInt64 paramIdx, Single val)
        {
            DuckdbState __result__;
            __result__ = duckdb_bind_float_((void *)reparedStatementRef, paramIdx, val);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_float", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_float_(void *param0, UInt64 param1, float param2);
        
        public override unsafe DuckdbState DuckdbBindDouble(IntPtr reparedStatementRef, UInt64 paramIdx, Double val)
        {
            DuckdbState __result__;
            __result__ = duckdb_bind_double_((void *)reparedStatementRef, paramIdx, val);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_double", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_double_(void *param0, UInt64 param1, double param2);
        
        public override unsafe DuckdbState DuckdbBindVarchar(IntPtr reparedStatementRef, UInt64 paramIdx, String val)
        {
            IntPtr val_;
            DuckdbState __result__;
            val_ = Encoder.ManagedStringToNativeUtf8(val);
            __result__ = duckdb_bind_varchar_((void *)reparedStatementRef, paramIdx, (void *)val_);
            Marshal.FreeHGlobal(val_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_varchar", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_varchar_(void *param0, UInt64 param1, void *param2);
        
        public override unsafe DuckdbState DuckdbBindNull(IntPtr reparedStatementRef, UInt64 paramIdx)
        {
            DuckdbState __result__;
            __result__ = duckdb_bind_null_((void *)reparedStatementRef, paramIdx);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_bind_null", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_bind_null_(void *param0, UInt64 param1);
        
        public override unsafe DuckdbState DuckdbExecutePrepared(IntPtr reparedStatementRef, ref DuckdbResult outResult)
        {
            DuckdbResult.__Native outResult_ = default (DuckdbResult.__Native);
            DuckdbState __result__;
            outResult.__MarshalTo(ref outResult_);
            __result__ = duckdb_execute_prepared_((void *)reparedStatementRef, &outResult_);
            outResult.__MarshalFree(ref outResult_);
            return __result__;
        }

        [DllImport(Dll, EntryPoint = "duckdb_execute_prepared", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern DuckdbState duckdb_execute_prepared_(void *param0, void *param1);
        
        public override unsafe void DuckdbDestroyPrepare(IntPtr reparedStatementRef)
        {
            duckdb_destroy_prepare_((void *)reparedStatementRef);
        }

        [DllImport(Dll, EntryPoint = "duckdb_destroy_prepare", CallingConvention = CallingConvention.Cdecl)]
        private unsafe static extern void duckdb_destroy_prepare_(void *param0);
    }
}